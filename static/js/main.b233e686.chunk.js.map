{"version":3,"sources":["actions/types.js","actions/index.js","components/CommentBox.js","components/CommentList.js","reducers/index.js","reducers/comments.js","Root.js","index.js","components/App.js"],"names":["SAVE_COMMENT","FETCH_COMMENTS","saveComment","comment","type","payload","fetchComments","response","axios","get","connect","actions","props","_useState","useState","_useState2","Object","slicedToArray","setComment","react_default","a","createElement","onSubmit","event","preventDefault","className","value","onChange","target","onClick","state","comments","map","key","combineReducers","arguments","length","undefined","action","concat","toConsumableArray","data","name","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","ReactDOM","render","_ref","children","_ref$initialState","initialState","store","createStore","reducers","applyMiddleware","reduxPromise","es","components_CommentBox","components_CommentList","document","querySelector"],"mappings":"kTAAaA,EAAe,eACfC,EAAiB,kCCEvB,SAASC,EAAYC,GAC1B,MAAO,CACLC,KAAMJ,EACNK,QAASF,GAIN,SAASG,IACd,IAAMC,EAAWC,IAAMC,IAAI,iDAC3B,MAAO,CACLL,KAAMH,EACNI,QAASE,SC+BEG,kBACb,KACAC,EAFaD,CAvCf,SAAoBE,GAAO,IAAAC,EACKC,mBAAS,IADdC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAClBV,EADkBY,EAAA,GACTG,EADSH,EAAA,GAYzB,OACEI,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,QAAMC,SAPW,SAAAC,GACnBA,EAAMC,iBACNZ,EAAMV,YAAYC,GAClBe,EAAW,MAKPC,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAA,OAAKI,UAAU,cACbN,EAAAC,EAAAC,cAAA,YACEI,UAAU,eACVC,MAAOvB,EACPwB,SAjBW,SAAAJ,GACnBL,EAAWK,EAAMK,OAAOF,WAmBpBP,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAQI,UAAU,iBAAlB,oBAGJN,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,UACEI,UAAU,+BACVI,QAASjB,EAAMN,eAFjB,kBAMAa,EAAAC,EAAAC,cAAA,cCpBSX,kBAJf,SAAyBoB,GACvB,MAAO,CAAEC,SAAUD,EAAMC,WAGZrB,CAjBf,SAAqBE,GAMnB,OACEO,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UANKT,EAAMmB,SAASC,IAAI,SAAA7B,GACxB,OAAOgB,EAAAC,EAAAC,cAAA,MAAIY,IAAK9B,GAAUA,wCCHjB+B,cAAgB,CAC7BH,SCFa,WAA6B,IAApBD,EAAoBK,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAZ,GAAIG,EAAQH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC1C,OAAQC,EAAOlC,MACb,KAAKJ,EACH,SAAAuC,OAAAvB,OAAAwB,EAAA,EAAAxB,CAAWc,GAAX,CAAkBQ,EAAOjC,UAC3B,KAAKJ,EACH,IAAM8B,EAAWO,EAAOjC,QAAQoC,KAAKT,IAAI,SAAA7B,GAAO,OAAIA,EAAQuC,OAC5D,SAAAH,OAAAvB,OAAAwB,EAAA,EAAAxB,CAAWc,GAAXd,OAAAwB,EAAA,EAAAxB,CAAqBe,IACvB,QACE,OAAOD,MCFPa,EAAmBC,OAAOC,sCAAwCC,ICHxEC,IAASC,OACP7B,EAAAC,EAAAC,cDKa,SAAA4B,GAAqC,IAAlCC,EAAkCD,EAAlCC,SAAkCC,EAAAF,EAAxBG,oBAAwB,IAAAD,EAAT,GAASA,EAC5CE,EAAQC,YACZC,EACAH,EACAT,EAAiBa,YAAgBC,OAEnC,OAAOtC,EAAAC,EAAAC,cAACqC,EAAA,EAAD,CAAUL,MAAOA,GAAQH,ICXhC,KACE/B,EAAAC,EAAAC,cCHW,WACb,OACEF,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACbN,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACsC,EAAD,MACAxC,EAAAC,EAAAC,cAACuC,EAAD,QDFF,OAEFC,SAASC,cAAc","file":"static/js/main.b233e686.chunk.js","sourcesContent":["export const SAVE_COMMENT = 'save_comment';\nexport const FETCH_COMMENTS = 'fetch_comments';\n","import { SAVE_COMMENT, FETCH_COMMENTS } from 'actions/types';\nimport axios from 'axios';\n\nexport function saveComment(comment) {\n  return {\n    type: SAVE_COMMENT,\n    payload: comment\n  };\n}\n\nexport function fetchComments() {\n  const response = axios.get('https://jsonplaceholder.typicode.com/comments');\n  return {\n    type: FETCH_COMMENTS,\n    payload: response\n  };\n}\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\n// grab all actions\nimport * as actions from 'actions';\nimport 'components/CommentBox.css';\n\nfunction CommentBox(props) {\n  const [comment, setComment] = useState('');\n\n  const handleChange = event => {\n    setComment(event.target.value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    props.saveComment(comment);\n    setComment('');\n  };\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <h4>Add a comment</h4>\n        <div className=\"form-group\">\n          <textarea\n            className=\"form-control\"\n            value={comment}\n            onChange={handleChange}\n          />\n        </div>\n        <div>\n          <button className=\"btn btn-light\">Submit Comment</button>\n        </div>\n      </form>\n      <br />\n      <button\n        className=\"btn btn-light fetch-comments\"\n        onClick={props.fetchComments}\n      >\n        Fetch Comments\n      </button>\n      <br />\n    </div>\n  );\n}\n\nexport default connect(\n  null,\n  actions\n)(CommentBox);\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nfunction CommentList(props) {\n  function renderComments() {\n    return props.comments.map(comment => {\n      return <li key={comment}>{comment}</li>;\n    });\n  }\n  return (\n    <div>\n      <ul>{renderComments()}</ul>\n    </div>\n  );\n}\n\nfunction mapStateToProps(state) {\n  return { comments: state.comments };\n}\n\nexport default connect(mapStateToProps)(CommentList);\n","import { combineReducers } from 'redux';\nimport commentsReducer from 'reducers/comments';\n\nexport default combineReducers({\n  comments: commentsReducer\n});\n","import { SAVE_COMMENT, FETCH_COMMENTS } from 'actions/types';\n\nexport default function(state = [], action) {\n  switch (action.type) {\n    case SAVE_COMMENT:\n      return [...state, action.payload];\n    case FETCH_COMMENTS:\n      const comments = action.payload.data.map(comment => comment.name);\n      return [...state, ...comments];\n    default:\n      return state;\n  }\n}\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport reduxPromise from 'redux-promise';\n\n// when we import a directory by default we get the index.js file\nimport reducers from 'reducers';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n// default state to be an empty object\nexport default ({ children, initialState = {} }) => {\n  const store = createStore(\n    reducers,\n    initialState,\n    composeEnhancers(applyMiddleware(reduxPromise))\n  );\n  return <Provider store={store}>{children}</Provider>;\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport Root from 'Root';\n\nReactDOM.render(\n  <Root>\n    <App />\n  </Root>,\n  document.querySelector('#root')\n);\n","import React from 'react';\nimport CommentBox from './CommentBox';\nimport CommentList from './CommentList';\n\nexport default () => {\n  return (\n    <div className=\"container\">\n      <br />\n      <CommentBox />\n      <CommentList />\n    </div>\n  );\n};\n"],"sourceRoot":""}